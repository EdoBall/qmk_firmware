EdoBall KB 5 のノウハウ。

ごぶさたしています。

Xではほそぼそと書き込みはしていたのですが、こちらはすっかりご無沙汰していて、
作ったキーボードの話しもなんとなく書きそびれていました。気がついたら一年以上.......
とはいえ、開発のほうも細々と続けていて、いろいろ書けることも溜っていたので、ちょっとづつ書いていこうかと思います。

では、まず、作ったキーボードの概要から。

EdoBall KB 3 (The Grey)

私が初めてPCB設計から行なったキーボードです。
特徴としては

*トラックボール・パームレスト付き分割型キーボード
**トラックボール・パームレストは(一応)分離可。
*マイクロソフトのヘルシーコンピューティングガイドラインに影響を受けた逆ティルト型
*カラムスタッガード
*キーピッチ： 18mm

*キースイッチ: Kailh Choc v1 (Brown)
*キーキャップ: オリジナル3Dプリント(ABS)

その他の特徴
*パームレスト部のネジ部のタッチスイッチによる、キーボード部の通常モード/マウスモードの切り替え(レイヤ切り替え)
*手前ネジ部のタッチスイッチによるレイヤ切り替え






ハードウェア
MCU: Rapsberry Pi Pico * 2
Trackball Sensor ADNS-5050
Touch Sensor: 抵抗式
USUS;USJP;




小ネタ：キーキャップの3Dプリント
QIDI Q1 Pro

最近は、Bamboo Lab のプリンタを使う方が多いようですが、私は最初に購入した3DPが、QIDI の X-Smartで(DPZの記事を見たからですが)、
QIDIのサポートがけっこう良かったのと、ちょっと安かったこともあり、昨年これを購入しました。
まぁ、今となっては、AMSとかうらやましかったりもするのですが、購入時にはあまり魅力を感じなかったんですよね、AMS(ちょっと後悔w)。でも、まぁ、Q1 Proも結構便利に使っています。


ということで、マジョリティのBamboo Labのユーザの方にあてはまるかは、よく分からないのですが、まぁ、そんなに違わないでしょう、ということで
今回は、キーキャップの3Dプリントにまつわる小ネタです。

さて、今回私が設計・制作している、EdoBall KB5 ですが、キーピッチが18mm、配列が左半分がオーソリニア、
右半分がアリスっぽいカラムスタッガード配列で、特に右半分はキーの間隔が特殊です。市販のキーキャップだと隣接したキーに干渉してしまいます。
それで、必然的にキーキャップも自作の必要がありました。以前、円形のキーキャップは作ったことがあり、まぁ、そのまま流用でもよかったんですが、
今回は、(パスワードを入力する時の確認用に)キーキャップに文字を印刷したかったので、文字印刷用の長方形の領域を確保したいと
考えていました。そこで、外形としては、このティアドロップ形を考えました。

次に文字の印刷ですが、3DPのノズルが0.4mmの場合、普通に文字面を上面にして印刷すると、あまり印刷の品質が良くないことに気がつきました。XY一筆書きの限界？
0.2mmのノズルも持ってはいるのですが、付け替えが面倒です。そこで、QIDI のスライサでは、印刷品質をExtra Fineにすると、積層ピッチが、0.12mmに
なるので、斜めに印刷すれば、実質的に解像度が上がるのではないかと考え、60°の角度を付けて印刷してみました。
この場合、奥のほうはあまり目立たないので、奥を60°の角度を付けてカットしています。
印刷時には、ビルドプレートに直接配置したほうが、底面の印刷はキレイですが、失敗しやすく、ラフトを2層挟んだほうが失敗は少ないようです。(フィラメントによりますが。)

この角度にすると、文字面は比較的キレイに印刷できるのですが、ステム部の端の印刷はやや不安定になります。QIDIスライサでオーガニックサポートを付与すると、比較的失敗は少ないようです(が、たまに失敗はする。)
一応、手動のサポート的なものを付加すると失敗の確立は減るようです。このへんは、まだまだ改良の余地がありそうですが、一応印刷できなくもなく、正直かなり面倒なトライ&エラーが必要なので、良しとしています。

文字を印刷しない場合は、逆に60°の角度を付けると、ステム部がキレイに印刷できると思います。

いずれにせよ、60°程度の斜め印刷することにより、0.4mmノズルでもより細かい造形が可能になり、また、ステム部の軸方向の強度も増してるんじゃないかと思います。キーキャップを印刷する場合は有用な小技なんじゃないかと思います。



小ネタ：qmk の key override を使った、Emacs風カーソルキーバインドの実装
qmk の key override 機能はご存じでしょうか？これは、特定の修飾キー（CtrlやShiftなど）と通常キーの組み合わせが押されたときに、別のキー入力や動作に置き換える機能です。
(キーボード側)物理US配列→(PC側)論理JIS配列変換などに、良く行われているようです。
(物理配列はUS配列だけれど、PC側の設定は日本語キーボードにする。これを使うとUS配列にはない、変換／無変換キーなどが使えて便利だったりします。)
私も前作(EdoBall KB 3)までは、専用のレイヤを設定して、この機能を実現していたのですが、key overrideを使ったほうがエレガントであろう、と
EdoBall KB 5からは、この key override の機能を使っています。
そして、以前から、EmacsライクなCtrl-F等でカーソル移動を行う機能も、レイヤを使って実現していたのですが、これも
key overrideを使って実現することにしました。
今回はその場合の小ネタ。

